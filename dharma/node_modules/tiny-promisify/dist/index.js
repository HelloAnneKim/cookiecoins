'use strict';

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function promisify(fn, options) {
  if (typeof fn !== 'function') {
    throw new TypeError('first parameter is not a function');
  }

  var opts = (0, _assign2.default)({
    context: {},
    multiArgs: false
  }, options);

  return function () {
    for (var _len = arguments.length, callArgs = Array(_len), _key = 0; _key < _len; _key++) {
      callArgs[_key] = arguments[_key];
    }

    return new _promise2.default(function (resolve, reject) {
      callArgs.push(function (err, result) {
        if (err) {
          reject(err);
          return;
        }

        if (opts.multiArgs) {
          for (var _len2 = arguments.length, rest = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            rest[_key2 - 2] = arguments[_key2];
          }

          resolve([result].concat(rest));
        } else {
          resolve(result);
        }
      });

      fn.apply(opts.context, callArgs);
    });
  };
}

module.exports = promisify;